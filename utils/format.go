package utils

import (
	"os"
	"path/filepath"
	"regexp"
	"strings"
)

// Removes filename extension and returns only filename
func RemoveExtension(file string) string {
	ext := filepath.Ext(file)
	return strings.TrimSuffix(file, ext)
}

// Find *.go contract bind generated by abigen, changes package name
// and adds receiver to Deploy<contract-name>() function to make reflect.Call
// accessible by functions name string.
func PatchBind(filePath string) error {
	b, err := os.ReadFile(filePath)
	if err != nil {
		return err
	}
	// find deploy function and adds receiver
	find := regexp.MustCompile(`Deploy`).FindString(string(b))
	replaced := strings.Replace(string(b), find, "(d Deployer) Deploy", 2)
	code := regexp.MustCompile(`package (\w+)`).ReplaceAllString(replaced, "package bindings")
	//nolint:gofumpt
	return os.WriteFile(filePath, []byte(code), 0600)
}
